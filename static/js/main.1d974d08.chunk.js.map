{"version":3,"sources":["components/Autocomplete.tsx","App.tsx","data/people.ts","index.tsx"],"names":["Autocomplete","people","setSelectedPerson","useState","value","setValue","appliedValue","setAppliedValue","isShownList","setIsShownList","filtredPeople","useMemo","filter","person","name","toLowerCase","includes","trim","trimValue","applyValue","useCallback","debounce","className","type","placeholder","onChange","event","target","onFocus","onBlur","setTimeout","role","length","map","href","classNames","sex","onClick","preventDefault","handleSelectedPerson","born","died","fatherName","motherName","slug","index","id","App","selectedPerson","setSelectesPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d974d08.chunk.js","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport debounce from 'lodash.debounce';\n\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  people: Person[],\n  setSelectedPerson?: (person: Person) => void | undefined,\n};\n\nconst trimValue = (value: string) => {\n  return value.trim().toLowerCase();\n};\n\nexport const Autocomplete: React.FC<Props> = ({\n  people,\n  setSelectedPerson = () => {},\n}) => {\n  const [value, setValue] = useState('');\n  const [appliedValue, setAppliedValue] = useState('');\n  const [isShownList, setIsShownList] = useState(false);\n\n  const getFullList = () => {\n    if (!value) {\n      setIsShownList(true);\n    }\n  };\n\n  const filtredPeople: Person[] | undefined = useMemo(() => {\n    return people.filter((person: Person) => {\n      return person.name.toLowerCase().includes(trimValue(appliedValue));\n    });\n  }, [appliedValue, people]);\n\n  const applyValue = useCallback(debounce(setAppliedValue, 1000), []);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    applyValue(event.target.value);\n    setIsShownList(true);\n  };\n\n  const handleSelectedPerson = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    person: Person,\n  ) => {\n    event.preventDefault();\n    setValue(person.name);\n    setSelectedPerson(person);\n    setIsShownList(false);\n  };\n\n  const handleOnBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (value) {\n      setValue('');\n      setAppliedValue(event.target.value);\n      applyValue('');\n    }\n\n    setTimeout(() => {\n      setIsShownList(false);\n    }, 200);\n  };\n\n  return (\n    <div className=\"dropdown is-active\">\n      <div className=\"dropdown-trigger\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n          value={value}\n          onChange={handleQueryChange}\n          onFocus={getFullList}\n          onBlur={handleOnBlur}\n        />\n      </div>\n      {isShownList && (\n        <div className=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {!filtredPeople.length ? (\n              <div className=\"dropdown-item\">\n                No matching suggestions\n              </div>\n            ) : (\n              filtredPeople.map(person => (\n                <a\n                  key={person.name}\n                  href=\"/\"\n                  className={classNames('dropdown-item', {\n                    'has-text-link': person.sex === 'm',\n                    'has-text-danger': person.sex === 'f',\n                  })}\n                  onClick={(event) => handleSelectedPerson(event, person)}\n                >\n                  {person.name}\n                </a>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { peopleFromServer } from './data/people';\nimport { Autocomplete } from './components/Autocomplete';\nimport { Person } from './types/Person';\n\nconst people = peopleFromServer.map((person, index) => {\n  return {\n    ...person,\n    id: index + 1,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [selectedPerson, setSelectesPerson] = useState<Person | null>(null);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? `${selectedPerson.name} (${selectedPerson.born} - ${selectedPerson.died})`\n          : 'No matching suggestions'}\n      </h1>\n\n      <Autocomplete\n        people={people}\n        setSelectedPerson={setSelectesPerson}\n      />\n    </main>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}